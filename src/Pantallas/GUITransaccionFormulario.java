/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pantallas;

import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.plaf.OptionPaneUI;
import variablesGlobales.MensajesError;
import variablesGlobales.MensajesExito;
import webbanking.Cuenta;
import webbanking.db.Consultas;
import webbanking.operaciones.Transferencia;

/**
 *
 * @author sotelo
 */
public class GUITransaccionFormulario extends javax.swing.JFrame {
    JLabel error = new JLabel();
    private Cuenta cuenta;
    private GUIMenuPrincipal ventanaPrincipal;

    /**
     * Creates new form GUITransaccionFormulario
     */
    public GUITransaccionFormulario(Cuenta cuenta) {
        this.setLocationRelativeTo(null);//centra la ventana en la pantalla
        this.cuenta = cuenta;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        monto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cuentaDestino = new javax.swing.JTextField();
        Aceptar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        cuentaOrigen = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Formulario transaccion");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Cuenta origen:");

        jLabel2.setText("Monto a transferir:");

        monto.setForeground(new java.awt.Color(204, 204, 204));
        monto.setToolTipText("Ingresa el monto");
        monto.setName("monto"); // NOI18N
        monto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montoActionPerformed(evt);
            }
        });

        jLabel5.setText("No. Cuenta destino");

        cuentaDestino.setForeground(new java.awt.Color(204, 204, 204));
        cuentaDestino.setToolTipText("Ingresa numero de cuenta");
        cuentaDestino.setName("cuentaDestino"); // NOI18N
        cuentaDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuentaDestinoActionPerformed(evt);
            }
        });

        Aceptar.setText("Aceptar");
        Aceptar.setName("realizarTransaccion"); // NOI18N
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        cuentaOrigen.setEditable(false);
        cuentaOrigen.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        cuentaOrigen.setText("ID cuenta: "+ Long.toString(cuenta.getIDcuenta()));
        cuentaOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuentaOrigenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Aceptar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuentaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(monto, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cuentaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cuentaOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cuentaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Aceptar)
                    .addComponent(Cancelar))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void montoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_montoActionPerformed

    private void cuentaDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuentaDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuentaDestinoActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        // TODO add your handling code here:
        dispose();
        this.ventanaPrincipal = new GUIMenuPrincipal(cuenta);
        this.ventanaPrincipal.setVisible(true);
    }//GEN-LAST:event_CancelarActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        // TODO add your handling code here:
    
        try {
            String cuentaDestinoText = cuentaDestino.getText().trim();
            String montoText = monto.getText().trim();

            if (cuentaDestinoText.isEmpty() || montoText.isEmpty()) {
                JOptionPane.showMessageDialog(this, MensajesError.ERROR_FORMULARIO, "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!esNumeroValido(cuentaDestinoText) || !esNumeroValido(montoText)) {
                JOptionPane.showMessageDialog(this, MensajesError.ERROR_CAMPO_NUMERICO, "Error", JOptionPane.ERROR_MESSAGE);
            } else if(cuentaDestinoText.equals(Long.toString(cuenta.getIDcuenta()))){
                JOptionPane.showMessageDialog(this, "La cuenta destino debe ser diferente a la cuenta origen", "Error", JOptionPane.ERROR_MESSAGE);
            }else if(Double.parseDouble(montoText) > cuenta.getSaldo()){
                JOptionPane.showMessageDialog(this, "El monto a transferir supera el saldo de la cuenta", "Error", JOptionPane.ERROR_MESSAGE);
            }else if(Double.parseDouble(montoText) <= 0){
                JOptionPane.showMessageDialog(this, "El monto a transferir debe ser mayor a cero", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                long cuentaDestinoID = Long.parseLong(cuentaDestinoText);
                double montoTransferencia = Double.parseDouble(montoText);

                Transferencia t = new Transferencia(cuentaDestinoID, montoTransferencia, cuenta);
                Transferencia response = t.Transferir();

                if (response.getMensaje() == null || response.getMensaje().isEmpty()) {
                    dispose();
                    JOptionPane.showMessageDialog(this, MensajesExito.EXITO_ACTUALIZACION);

                    // Crear una nueva ventana para el ticket de transferencia
                    JFrame ticketFrame = new JFrame("Ticket de Transferencia");
                    ticketFrame.setSize(400, 300);
                    ticketFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                    JTextArea ticketArea = new JTextArea();
                    ticketArea.setEditable(false);

                    // Generar contenido del ticket
                    StringBuilder ticket = new StringBuilder();
                    ticket.append(generarLinea(40)).append("\n");
                    ticket.append("         Ticket de Transferencia         \n");
                    ticket.append(generarLinea(40)).append("\n");
                    ticket.append("Cuenta Origen: ").append(cuenta.getIDcuenta()).append("\n");
                    ticket.append("Nombre Cuenta Origen: ").append(cuenta.gettitular()).append("\n"); // Nombre de la cuenta origen
                    ticket.append("Cuenta Destino: ").append(cuentaDestinoID).append("\n");

                    // Aquí deberías obtener el nombre de la cuenta destino
                    // Para eso debes tener acceso a la cuenta destino, lo que puedes obtener de la base de datos o de un objeto similar a `cuenta`
                    // Ejemplo:
                    Cuenta cuentaDestino = Consultas.obtenerCuenta(cuentaDestinoID);  // Asegúrate de tener un método para obtener la cuenta destino
                    if (cuentaDestino != null) {
                        ticket.append("Nombre Cuenta Destino: ").append(cuentaDestino.gettitular()).append("\n");
                    } else {
                        ticket.append("Nombre Cuenta Destino: Desconocido\n");  // Si no encuentras la cuenta destino
                    }

                    ticket.append("Monto Transferido: ").append(String.format("%.2f", montoTransferencia)).append("\n");
                    ticket.append("Fecha: ").append(java.time.LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE)).append("\n");
                    ticket.append(generarLinea(40)).append("\n");

                    ticketArea.setText(ticket.toString());

                    JScrollPane scrollPane = new JScrollPane(ticketArea);
                    ticketFrame.add(scrollPane);
                    ticketFrame.setLocationRelativeTo(null); // Centra la ventana en la pantalla
                    ticketFrame.setVisible(true);
                    ticketFrame.setAlwaysOnTop(rootPaneCheckingEnabled);

                    this.ventanaPrincipal = new GUIMenuPrincipal(cuenta);
                    this.ventanaPrincipal.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, response.getMensaje());
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, MensajesError.ERROR_INESPERADO, "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }



    }//GEN-LAST:event_AceptarActionPerformed

    // Método auxiliar para generar líneas de caracteres
private String generarLinea(int longitud) {
    StringBuilder linea = new StringBuilder();
    for (int i = 0; i < longitud; i++) {
        linea.append("\u2500");
    }
    return linea.toString();
}

    private boolean esNumeroValido(String input) {
        try {
            Double.parseDouble(input); // También válido para enteros
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    private void cuentaOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuentaOrigenActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cuentaOrigenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITransaccionFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITransaccionFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITransaccionFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITransaccionFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Cuenta cuenta=new Cuenta("","", "",0,0, "",0,0);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUITransaccionFormulario(cuenta).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField cuentaDestino;
    private javax.swing.JTextField cuentaOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField monto;
    // End of variables declaration//GEN-END:variables
}
